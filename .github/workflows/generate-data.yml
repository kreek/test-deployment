name: Generate Data

on:
  push:
    branches:
      - main
    paths:
      - 'scripts/**'
      - 'data/**'
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours

permissions:
  contents: write
  pages: write
  id-token: write
  actions: write

jobs:
  generate:
    runs-on: ubuntu-latest
    env:
      DATA_DIR: data
      DEPLOYMENT_BRANCH: github-pages-deployment
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Generate data
        run: |
          mkdir -p data
          python scripts/generate_data.py

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'

      - name: Update deployment branch with data
        run: |
          # Check if deployment branch exists
          if git ls-remote --exit-code --heads origin ${{ env.DEPLOYMENT_BRANCH }}; then
            # Clone the existing deployment branch to preserve frontend files
            mkdir -p /tmp/deployment-branch
            git worktree add --detach /tmp/deployment-branch origin/${{ env.DEPLOYMENT_BRANCH }}
            cd /tmp/deployment-branch
            
            # Update only data files
            rm -rf ${{ env.DATA_DIR }}
            mkdir -p ${{ env.DATA_DIR }}
            cp -r $GITHUB_WORKSPACE/${{ env.DATA_DIR }}/* ${{ env.DATA_DIR }}/
            
            # Commit and push changes
            git add .
            if git diff --staged --quiet; then
              echo "No changes to commit for data files."
            else
              git commit -m "Update data files"
              git push origin HEAD:${{ env.DEPLOYMENT_BRANCH }}
            fi
            
            # Clean up
            cd $GITHUB_WORKSPACE
            git worktree remove /tmp/deployment-branch
          else
            # Create new orphan branch with just data
            git checkout --orphan ${{ env.DEPLOYMENT_BRANCH }}
            git rm -rf .
            mkdir -p ${{ env.DATA_DIR }}
            cp -r $GITHUB_WORKSPACE/${{ env.DATA_DIR }}/* ${{ env.DATA_DIR }}/
            touch .nojekyll
            git add ${{ env.DATA_DIR }} .nojekyll
            git commit -m "Initial data files"
            git push origin ${{ env.DEPLOYMENT_BRANCH }}
          fi
      
      - name: Trigger Frontend Deployment
        if: success() && github.event_name != 'push'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy-frontend.yml',
              ref: 'main'
            });